Note: it preserves the <a> and <div class="separator"> tags. The rest can be converted into <p>.
example: 
<div><div><div>Nội dung 1</div></div></div>
<div><div>Nội dung 2</div></div> 
====> 
<p>Nội dung 1</p> 
<p>Nội dung 2</p>


<div class='novel-box' expr:data-post='data:post.body'></div>

function novelpost() {
    const novelBoxes = document.querySelectorAll('.novel-box');

    novelBoxes.forEach(novelBox => {
        const dataPostHTML = novelBox.getAttribute('data-post');
        
        const tempContainer = document.createElement('div');
        tempContainer.innerHTML = dataPostHTML;

        const fragment = document.createDocumentFragment();

        function processNode(node) {
            if (node.nodeType === Node.TEXT_NODE) {
                if (node.nodeValue.trim()) {
                    const paragraph = document.createElement('p');
                    paragraph.textContent = node.nodeValue.trim();
                    fragment.appendChild(paragraph);
                }
            } else if (node.nodeType === Node.ELEMENT_NODE) {
                if (node.tagName === 'A') {
                    if (node.textContent.trim()) {
                        fragment.appendChild(node.cloneNode(true));
                    }
                } else if (node.tagName === 'DIV' && node.classList.contains('separator')) {
                    const imgElements = node.getElementsByTagName('img');

                    if (imgElements.length > 0) {
                        const newSeparator = document.createElement('div');
                        newSeparator.className = 'separator';

                        Array.from(imgElements).forEach(img => {
                            img.setAttribute('title', 'Hình ảnh');
                            img.setAttribute('aria-label', 'Hình ảnh');

                            if (!img.hasAttribute('loading')) {
                                img.setAttribute('loading', 'lazy');
                            }

                            newSeparator.appendChild(img);
                        });

                        fragment.appendChild(newSeparator);
                    }
                } else {
                    Array.from(node.childNodes).forEach(processNode);
                }
            }
        }

        Array.from(tempContainer.childNodes).forEach(processNode);

        novelBox.innerHTML = '';
        novelBox.appendChild(fragment);
    });
}

window.addEventListener("DOMContentLoaded", () => {
    novelpost();
});
