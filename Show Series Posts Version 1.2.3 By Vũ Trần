<style>
/*** Show Series Posts Version 1.2 By Vũ Trần ***/
  
  /* Setting */
  .Hot-tranvu::before{content: "HOT";background: orangered}
  .New-tranvu::before{content: "NEW";background: limegreen}
  .manga-tranvu::before{content: "Manga";background-color:red}
  .manhwa-tranvu::before{content: "Manhwa";background-color:#f90}
  .manhua-tranvu::before{content: "Manhua";background-color:#44db1a}
  .Ln-tranvu::before{content: "Light novel";background-color:#8000db}
  .Wn-tranvu::before{content: "Web novel";background-color:#0075cf}
  .in-progress-tranvu::before{content: "TIẾN HÀNH";top: 17px;left: -24px;background: #f7b500}
  .completed-tranvu::before{content: "HOÀN THÀNH";top: 19px;left: -27px;background: #15b33d}
  /* END */
  
  .Hot-tranvu::before,.New-tranvu::before{
    color: white;
    font-size: 10px;
    padding: 5px;
    border-radius: 100%;
    position: absolute;
    right: 5px;
    top: 3px;
    font-weight: 600;
  }
  .manga-tranvu::before,.manhwa-tranvu::before,.manhua-tranvu::before,.Ln-tranvu::before,.Wn-tranvu::before{
    position: absolute;
    bottom: 5px;
    right: 5px;
    color: #fff;
    border-radius: 3px;
    font-size: 11px;
    padding: 1.5px 7px;
    font-weight: 600;
    padding-bottom:2px;
  }
.in-progress-tranvu::before,.completed-tranvu::before{
    position: absolute;
    transform: rotate(-45deg);
    color: white;
    padding: 2px 24px;
    box-shadow: 0 2px 2px rgba(0,0,0,0.5);
    font-size: 10px;
    font-weight: 500;
  }
  #mainnnv {
    display: grid;
    grid-template-columns: repeat(auto-fill,minmax(151px,1fr));
    gap: 20px;
    padding: 15px;
}
.bookDetails h3{
  margin:5px 0px 5px 0px;
  overflow: hidden;
  position: relative;
}
.titleSeries {
  font-size:15px;
  display:-webkit-box;
  -webkit-line-clamp:2;
  -webkit-box-orient:vertical;
  color: #333;
  text-decoration: none;
  font-weight:600;
  overflow:hidden;
}
.bookCover {
  overflow:hidden;
  position: relative;
}
.bookCover img{
  width:100%;
  height:auto;
  object-fit:cover;
  border-radius:3px;
}
ul.Chapter-list{
    padding-left: 0;
    list-style: none;
    margin: 0;
}
ul.Chapter-list li a{
    display: -webkit-inline-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
    background: #366ad32e;
    padding: 1px 7px;
    border-radius: 10px;
    font-size: 12px;
    font-weight:600;
    color:#366ad3;
    max-width:60%
      
}
ul.Chapter-list li a:visited{
    color:gray
}
ul.Chapter-list li span{
    float:right;
    font-size:65%;
    font-style:italic;
    color:gray
}
.pagination-vu {
  text-align: center;
  margin-top: 10px;
  margin-bottom: 10px;
  border-top: 1px solid #f1f1f1;
}

.pagination-vu ul {
  display: inline-block;
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.pagination-vu li {
  display: inline-block;
  margin: 0 5px;
}

.pagination-vu li a {
  display:-webkit-inline-box;
  color: #333;
  text-decoration: none;
  padding: 8px 13px 9px 13px;
  border: 1px solid #ccc;
  border-radius: 3px;
  transition: background-color 0.3s ease, transform 0.3s ease;
  transform: translate3d(0, 0, 0);
  margin-top:10px
}

.pagination-vu li a:hover {
  background-color: #f5f5f5;
  transform: translateY(-2px);
}

.pagination-vu li.active-vu span {
  background-color: #366ad3;
  color: #fff;
  padding: 8px 13px 9px 13px;
  border: 1px solid #366ad3;
  border-radius: 3px;
}

.pagination-vu li.prevZ,
.pagination-vu li.nextZ {
  font-weight: bold;
}

.pagination-vu li.prevZ a span,
.pagination-vu li.nextZ a span {
  position: relative;
  font-family: monospace;
  top: -1.8px;
}

.pagination-vu li.prevZ a:hover,
.pagination-vu li.nextZ a:hover {
  background-color: #e0e0e0;
}
.loaders {
    width: 48px;
    height: 48px;
    display: inline-block;
    position: relative;
    border: 3px solid;
    border-color:#366ad3 #0000 #366ad3 #0000;
    border-radius: 50%;
    box-sizing: border-box;
    animation: 1s rotate linear infinite;
    display:flex;
    margin-left:auto;
    margin-right:auto;
 }
 .loaders:before , .loaders:after{
    content: '';
    top: 0;
    left: 0;
    position: absolute;
    border: 10px solid transparent;
    border-bottom-color:#366ad3;
    transform: translate(-10px, 19px) rotate(-35deg);
  }
 .loaders:after {
    border-color: #366ad3 #0000 #0000 #0000 ;
    transform: translate(32px, 3px) rotate(-35deg);
  }
   @keyframes rotate {
    100%{    transform: rotate(360deg)}
  }
  .loader {
          width: 48px;
          height: 48px;
          margin: auto;
          position: relative;
          margin-top:10%;
          margin-bottom:20%
        }
        .loader:before {
            content: '';
            width: 48px;
            height: 5px;
            background: #000;
            opacity: 0.25;
            position: absolute;
            top: 60px;
            left: 0;
            border-radius: 50%;
            animation: shadow 0.5s linear infinite;
          }
          .loader:after {
            content: '';
            width: 100%;
            height: 100%;
            background: #366ad3;
            animation: bxSpin 0.5s linear infinite;
            position: absolute;
            top: 0;
            left: 0;
            border-radius: 4px;
          }
        @keyframes bxSpin {
          17% {
            border-bottom-right-radius: 3px;
          }
          25% {
            transform: translateY(9px) rotate(22.5deg);
          }
          50% {
            transform: translateY(18px) scale(1, .9) rotate(45deg);
            border-bottom-right-radius: 40px;
          }
          75% {
            transform: translateY(9px) rotate(67.5deg);
          }
          100% {
            transform: translateY(0) rotate(90deg);
          }
        }

        @keyframes shadow {
          0%, 100% {
            transform: scale(1, 1);
          }
          50% {
            transform: scale(1.2, 1);
          }
        }
   
@media screen and (max-width: 824px){
#mainnnv {
    grid-template-columns: repeat(auto-fill,minmax(141px,1fr))!important;
 }  
ul.Chapter-list li a {
    max-width:53%
  }
}
/*** Show Series Posts Version 1.2 By Vũ Trần - END ***/
</style>

  <div id="mainnnv" style="display: none;"></div>
  <div class="lzozazdziznzg loader"></div>
  <div id="phantrannnv" style="display: none;"></div>

<script async="">
//*** Show Series Posts Version 1.2 By Vũ Trần ***//
var update = {mainItem: ["Series"]};
update.run = function(category, page, num) {
  var start = (page - 1) * num + 1;
  var script = document.createElement("script");
  script.src = "/feeds/posts/default/-/" + category + "?alt=json-in-script&orderby=published&start-index=" + start + "&max-results=" + num + "&callback=update.vutran";
  document.body.appendChild(script);
};
update.vutran = function(data) {
  var entries = data.feed.entry;
  if (!entries) return;
  var total = data.feed.openSearch$totalResults.$t;
  var start = data.feed.openSearch$startIndex.$t;
  var num = data.feed.openSearch$itemsPerPage.$t;
  var mainItems = [];
  entries.forEach(function(entry) {
    var title = entry.title.$t;
    var categories = entry.category.map(function(cat) { return cat.term });
    var link = entry.link.find(function(link) { return link.rel === "alternate" }).href;
    var published = entry.published.$t;
    var thumbnail = entry.media$thumbnail ? entry.media$thumbnail.url.replace("s72", "w175-h235-rw") : imageString(entry.content.$t);
    if (update.mainItem.some(function(item) { return categories.includes(item) })) {
      mainItems.push({
        title: title,
        link: link,
        thumbnail: thumbnail,
        categories: categories
      });
    }
  });
  var mainHTML = "";
  mainItems.forEach(function(item) {
  var statusClass = {
    "Đang tiến hành": "in-progress-tranvu",
    "Hoàn thành": "completed-tranvu"
  };
  var categoryClass = {
    Manga: "manga-tranvu",
    Manhwa: "manhwa-tranvu",
    Manhua: "manhua-tranvu",
    "Light Novel": "Ln-tranvu",
    "Web Novel": "Wn-tranvu"
  };
  var labelClass = {
    Hot: "Hot-tranvu",
    New: "New-tranvu"
  };
  var categories = item.categories.flatMap(function(category) {
    return [statusClass[category], categoryClass[category], labelClass[category]]
      .filter(Boolean)
      .map(function(className) {
        return "<span class='" + className + "'></span>";
      });
  }).join("");
    mainHTML += "<div class='vuItem' label='" + filterLabels(item.categories).join(" ") + "'><a href='" + item.link + "' title='Đọc ngay " + item.title + "'><div class='bookCover'><img loading='lazy' src='" + item.thumbnail + "' alt='" + item.title + "'>" + categories + "</div><div class='bookDetails'><h3><div class='titleSeries' alt='Đọc ngay " + item.title + "'>" + item.title + "</div></h3></div></a><ul class='Chapter-list'><span class='loaders'></span></ul></div>";
  });
  var paginationHTML = "";
  if (total > num) {
    var currentPage = Math.floor((start - 1) / num) + 1;
    var totalPages = Math.ceil(total / num);
    var firstPage = Math.max(1, currentPage - 2);
    var lastPage = Math.min(totalPages, currentPage + 2);
    var prevPage = currentPage - 1;
    var nextPage = currentPage + 1;
    paginationHTML += "<div class='pagination-vu'><ul>";
    if (currentPage > 1) {
      paginationHTML += "<li class='prev-vu'><a href='?page=" + prevPage + "' title='Sang trang " + prevPage + "'><span>&laquo</span></a></li>";
      paginationHTML += "<link rel='prefetch' href='?page=" + prevPage + "'></link>";
    }
    if (firstPage > 1) {
      paginationHTML += "<li><a href='?page=1' title='Trang 1'><span>1</span></a></li>";
      paginationHTML += "<link rel='prefetch' href='?page=1'></link>";
      if (firstPage > 2) {
        paginationHTML += "<li class='disabled-vu'><span>...</span></li>";
      }
    }
    for (var i = firstPage; i <= lastPage; i++) {
      if (i === currentPage) {
        paginationHTML += "<li class='active-vu'><span>" + i + "</span></li>";
      } else {
        paginationHTML += "<li><a href='?page=" + i + "' title='Trang " + i + "'><span>" + i + "</span></a></li>";
        paginationHTML += "<link rel='prefetch' href='?page=" + i + "'></link>";
      }
    }
    if (lastPage < totalPages) {
      if (lastPage < totalPages - 1) {
        paginationHTML += "<li class='disabled'><span>...</span></li>";
      }
      paginationHTML += "<li><a href='?page=" + totalPages + "' title='Trang " + totalPages + "'><span>" + totalPages + "</span></a></li>";
      paginationHTML += "<link rel='prefetch' href='?page=" + totalPages + "'></link>";
    }
    if (currentPage < totalPages) {
      paginationHTML += "<li class='next-vu'><a href='?page=" + nextPage + "' title='Sang trang "+ nextPage +"'><span>&raquo;</span></a></li>";
      paginationHTML += "<link rel='prefetch' href='?page=" + nextPage + "'></link>";
    }
    paginationHTML += "</ul></div>";
  }

  var mainnnv = document.getElementById("mainnnv");
  var phantrannnv = document.getElementById("phantrannnv");
  if (mainnnv) mainnnv.innerHTML = mainHTML;
  if (phantrannnv) phantrannnv.innerHTML = paginationHTML;
};
function imageString(str) {
  var imgStart = str.indexOf("<img");
  if (imgStart === -1) return "";
  var srcStart = str.indexOf("src=\"", imgStart) + 5;
  var srcEnd = str.indexOf("\"", srcStart);
  return str.slice(srcStart, srcEnd);
}
var urlParams = new URLSearchParams(window.location.search);
var page = urlParams.get('page') || 1;
//****** Setting ******//
function filterLabels(categories){var excludedLabels = ["10.0", "9.9", "9.8", "9.7", "9.6", "9.5", "9.4", "9.3", "9.2", "9.1", "9.0", "8.9", "8.8", "8.7", "8.6", "8.5", "8.4", "8.3", "8.2", "8.1", "8.0", "7.9", "7.8", "7.7", "7.6", "7.5", "7.4", "7.3", "7.2", "7.1", "7.0", "6.9", "6.8", "6.7", "6.6", "6.5", "6.4", "6.3", "6.2", "6.1", "6.0", "5.9", "5.8", "5.7", "5.6", "5.5", "5.4", "5.3", "5.2", "5.1", "5.0", "4.9", "4.8", "4.7", "4.6", "4.5", "4.4", "4.3", "4.2", "4.1", "4.0", "3.9", "3.8", "3.7", "3.6", "3.5", "3.4", "3.3", "3.2", "3.1", "3.0", "2.9", "2.8", "2.7", "2.6", "2.5", "2.4", "2.3", "2.2", "2.1", "2.0", "1.9", "1.8", "1.7", "1.6", "1.5", "1.4", "1.3", "1.2", "1.1", "1.0", "Action", "Adventure", "Comedy", "Cooking", "Drama", "Ecchi", "Fantasy", "Game", "Harem", "Historical", "Horror", "Isekai", "Josei", "Magic", "Manhua", "Manhwa", "Martial Arts", "Mature", "Mecha", "Medical", "Military", "Music", "Mystery", "Psychological", "Romance", "School Life", "Sci-Fi", "Seinen", "Shoujo", "Shounen", "Slice of Life", "Sports", "Supernatural", "Thriller", "Tragedy", "Vampire", "Series", "Project", "Light Novel", "WebNovel", "Web Novel", "Chapter", "Novel", "Novels", "Đang tiến hành", "Hoàn thành", "Hot", "New", "Manga", "Manhwa", "Manhua"];
// You must add the "label" you are using for the posts "Series" to "excludedLabels".

var filteredLabels = categories.filter(function(cat){return!excludedLabels.includes(cat)});return filteredLabels}document.addEventListener('DOMContentLoaded',function(){
const replacements = [ 
  { name: 'Chapter', news: 'Ch.' },
  { name: 'Chương', news: 'Ch.' },
  { name: 'Quyển', news: 'Q.' },
  { name: 'Tập', news: 'T.' },
  { name: 'Đặc biệt', news: 'Đ.Biệt' },
  { name: 'ngoại truyện', news: 'N.Truyện' },
  { name: 'Ngoài lề', news: 'N.Lề' }
];

update.run("Series", parseInt(page), 3) // Option to display the number of posts in 1 page.

function createChapterList(vuItem) {
  const numchar = 1; // Customize the number of chapters displayed
  const validLabels = ['chapter', 'novels']; // Do not write capital letters
//****** Setting [END] ******//
  
  const maxchar = numchar + 1;
  const website = window.location.origin;
  const label = vuItem.getAttribute('label');
  const feedUrl = `${website}/feeds/posts/summary/-/${label}?max-results=${maxchar}`;
  const xhttp = new XMLHttpRequest();
  
  xhttp.onreadystatechange = function() {
    if (this.readyState === 4 && this.status === 200) {
      const parser = new DOMParser();
      const responseXML = parser.parseFromString(this.responseText, 'text/xml');
      const latestPostLink = responseXML.querySelector('link[rel="alternate"][type="text/html"]').getAttribute('href');
      const chapterList = vuItem.querySelector('.Chapter-list');
      chapterList.innerHTML = '';
      const entries = responseXML.querySelectorAll('entry');
      
      const filteredEntries = Array.from(entries).filter(function(entry) {
        const categories = entry.querySelectorAll('category');
        let hasValidLabel = false;
        categories.forEach(function(category) {
          const term = category.getAttribute('term').toLowerCase();
          if (validLabels.includes(term)) {
            hasValidLabel = true;
          }
        });
        return hasValidLabel;
      });
      
      filteredEntries.slice(0, numchar).forEach(function(entry) {
        const title = entry.querySelector('title').textContent;
        let modifiedTitle = title;
        replacements.forEach(function(replacement) {
          modifiedTitle = modifiedTitle.replace(new RegExp(replacement.name, 'g'), replacement.news);
        });
        replacements.forEach(function(replacement) {
          if (modifiedTitle.includes(replacement.news)) {
            modifiedTitle = modifiedTitle.replace(new RegExp(`.*${replacement.news}(.*)$`), `${replacement.news}$1`)
          }
        });
        const listItem = document.createElement('li');
        const linkItem = document.createElement('a');
        const timeAgoItem = document.createElement('span');
        linkItem.href = new URL(entry.querySelector('link[rel="alternate"][type="text/html"]').getAttribute('href'), feedUrl).href;
        linkItem.textContent = modifiedTitle;
        timeAgoItem.textContent = getTimeAgo(entry.querySelector('published').textContent);
        listItem.appendChild(linkItem);
        listItem.appendChild(timeAgoItem);
        chapterList.appendChild(listItem);
      });
    }
  };
  
  xhttp.open('GET', feedUrl, true);
  xhttp.send();
}
const vuItems = document.getElementsByClassName('vuItem');
if (vuItems.length === 0) {
  const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
      if (mutation.addedNodes.length > 0) {
        const addedNodes = mutation.addedNodes;
        addedNodes.forEach(function(node) {
          if (node.classList && node.classList.contains('vuItem')) {
            observer.disconnect();
            createChapterList(node);
          }
        });
      }
    });
  });
  observer.observe(document.body, {
    childList: true,
    subtree: true
  });
} else {
  Array.from(vuItems).forEach(function(vuItem) {
    createChapterList(vuItem);
  });
}
function getTimeAgo(dateString) {
  const date = new Date(dateString);
  const now = new Date();
  const seconds = Math.floor((now - date) / 1000);
  
  if (seconds < 60) {
    return 'ngay bây giờ';
  } else if (seconds < 3600) {
    const minutes = Math.floor(seconds / 60);
    return `${minutes} phút trước`;
  } else if (seconds < 86400) {
    const hours = Math.floor(seconds / 3600);
    return `${hours} giờ trước`;
  } else if (seconds < 2629746) {
    const days = Math.floor(seconds / 86400);
    return `${days} ngày trước`;
  } else if (seconds < 31556952) {
    const months = Math.floor(seconds / 2629746);
    return `${months} tháng trước`;
  } else {
    const years = Math.floor(seconds / 31556952);
    return `${years} năm trước`;
  }
}
    var mainnnv = document.getElementById("mainnnv");
    var observer = new MutationObserver(function(mutations, observer) {
        if (mutations.some(mutation => mutation.addedNodes.length > 0)) {
            observer.disconnect();
            mainnnv.style.display = "";
            document.getElementById("phantrannnv").style.display = "";
            document.querySelector(".lzozazdziznzg").style.display = "none";
        }
    });
    observer.observe(mainnnv, {
        childList: true
    });
});
//*** Show Series Posts Version 1.2 By Vũ Trần - END ***//
</script>
