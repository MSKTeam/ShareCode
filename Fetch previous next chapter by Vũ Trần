Important note: the code has a huge disadvantage, just try the code and you will know how it is =)))))))
> Only people who are really good at coding and figuring out how to fix the downside. makes this a great feature to implement Previous/Next Chapter functionality.
> This method can be used to fix the error: Using JavaScript modules: You can use JavaScript modules to split variables into separate scopes between pages. This way, each page can have its own variables without causing conflicts with other pages.
Final note: I will not support the error correction process (because I am afraid of losing sleep anymore).

CODE:
<div class='nPL-show' id='nPL'/>
<div class='nPL-show' id='nPL2'/>

<script>/*<![CDATA[*/
const nPLPro = {
    arr: [],
    compile: function() {
        let t = window.location.href.split("?")[0],
            e = this.arr.findIndex((e) => e.link.split("?")[0] === t);
        if (-1 !== e) {
            let n = e + 1,
                i = e - 1,
                r = "",
                l = "";
            n < this.arr.length && (r = `<a href="${this.arr[n].link}"onclick="navigate('${this.arr[n].link}'); return false;"><span>&#8249;</span> Trước kia</a>`), i >= 0 && (l = `<a href="${this.arr[i].link}"onclick="navigate('${this.arr[i].link}'); return false;">Kế tiếp <span>&#8250;</span></a>`), jQuery(".nPL-show").html(`<select onchange="navigate(this.value)"class="nPL_select">${this.arr.map((t,n)=>`<option value="${t.link}"${n===e?"selected":""}>${t.title}</option>`).join("")}</select><div class="inner_nPL">${l}${r}</div>`);
            const head = document.querySelector("head");
            for (let j = 0; j < this.arr.length; j++) {
                const prefetchLink = document.createElement("link");
                prefetchLink.href = this.arr[j].link;
                prefetchLink.rel = "prefetch";
                prefetchLink.as = "document";
                head.appendChild(prefetchLink);
            }
        }
    },
    create: function(t, e = [], startIndex = 1) {
        const maxResults = 150;
        const feedUrl = `/feeds/posts/summary/-/${t}?alt=json-in-script&start-index=${startIndex}&max-results=${maxResults}`;
        jQuery.ajax({
            type: "get",
            url: feedUrl,
            dataType: "jsonp",
        }).done((data) => {
            if ("entry" in data.feed) {
                data.feed.entry.forEach((post) => {
                    const hasSeriesLabel = post.category.some((category) => category.term === "Series");
                    if (!hasSeriesLabel) {
                        let link = post.link.find((item) => item.rel === "alternate").href.split("?")[0];
                        this.arr.push({
                            title: post.title.$t,
                            link: link,
                        });
                    }
                });
                if (data.feed.entry.length === maxResults) {
                    startIndex += maxResults;
                    this.create(t, e, startIndex);
                } else {
                    this.compile();
                }
            } else {
                console.log("Error: no entries found.");
            }
        }).fail((error) => {
            console.log(error);
        });
    },
    run: function(t, e = []) {
        "function" == typeof jQuery && document.getElementById("nPL") ? this.create(t, e) : console.log("Error: not function or element not found.");
    },
};

function navigate(url) {
    fetchPage(url, function(responseText) {
        document.open();
        document.write(responseText);
        document.close();
        history.pushState(null, null, url);
        nPLPro.compile();
        window.scrollTo(0, 0);
    });
}

function fetchPage(url, callback) {
    fetch(url).then((response) => response.text()).then((data) => callback(data)).catch((error) => console.log(error));
}
window.addEventListener("popstate", function() {
    fetchPage(window.location.href, function(responseText) {
        document.open();
        document.write(responseText);
        document.close();
        nPLPro.compile();
        window.scrollTo(0, 0);
    });
});
/*]]>*/
window.addEventListener(`DOMContentLoaded`,function(){nPLPro.run(`<data:label.name/>`)});
</script>

